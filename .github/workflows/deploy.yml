name: CI/CD â€“ PEENYTOOLS

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/peeny-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/peeny-frontend:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Prepare SSH known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Create docker-compose.yml
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          cat > docker-compose.yml << 'EOF'
version: "3.8"

services:
  backend:
    image: ${DOCKER_HUB_USERNAME}/peeny-backend:latest
    restart: unless-stopped
    environment:
      DB_HOST: 93.127.206.203
      DB_USER: ptadmin
      DB_PASSWORD: iE6IApsCDfNsVAdurDdK
      DB_NAME: peenytoolsdb
      DB_PORT: 3306
      JWT_SECRET: pennytools-ai-shopfront-secure-jwt-secret-key-2024
    ports:
      - "3000:3000"
    networks:
      - app-network

  frontend:
    image: ${DOCKER_HUB_USERNAME}/peeny-frontend:latest
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://backend:3000
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
EOF

      - name: Transfer docker-compose.yml to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VPS_USER }}/peenytools"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "ðŸš€ Deploying PeenyTools..."

            # Navigate to deployment directory
            cd /home/${{ secrets.VPS_USER }}/peenytools || { echo "Failed to navigate to deployment directory"; exit 1; }

            # Login to Docker Hub
            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}" || { echo "Docker login failed"; exit 1; }

            # Pull the latest Docker images
            echo "ðŸ”„ Pulling latest Docker images..."
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/peeny-backend:latest || { echo "Failed to pull backend image"; exit 1; }
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/peeny-frontend:latest || { echo "Failed to pull frontend image"; exit 1; }

            # Stop any running containers
            echo "ðŸ›‘ Stopping existing containers..."
            docker compose down || { echo "Failed to stop containers"; exit 1; }

            # Start containers with the latest images
            echo "ðŸš€ Starting containers..."
            docker compose up -d || { echo "Failed to start containers"; exit 1; }

            echo "âœ… Deployment completed successfully!"